// Generated by Dagger (https://google.github.io/dagger).
package com.example.Fabulous.module;

import com.example.Fabulous.LoginActivityContract;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class LoginActivityMvpModule_ProvideViewFactory
    implements Factory<LoginActivityContract.View> {
  private final LoginActivityMvpModule module;

  public LoginActivityMvpModule_ProvideViewFactory(LoginActivityMvpModule module) {
    this.module = module;
  }

  @Override
  public LoginActivityContract.View get() {
    return Preconditions.checkNotNull(
        module.provideView(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static LoginActivityMvpModule_ProvideViewFactory create(LoginActivityMvpModule module) {
    return new LoginActivityMvpModule_ProvideViewFactory(module);
  }

  public static LoginActivityContract.View proxyProvideView(LoginActivityMvpModule instance) {
    return Preconditions.checkNotNull(
        instance.provideView(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
