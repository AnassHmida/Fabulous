// Generated by Dagger (https://google.github.io/dagger).
package com.example.Fabulous.module;

import com.example.Fabulous.LoginActivity;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class LoginActivityContextModule_ProvidesLoginActivityFactory
    implements Factory<LoginActivity> {
  private final LoginActivityContextModule module;

  public LoginActivityContextModule_ProvidesLoginActivityFactory(
      LoginActivityContextModule module) {
    this.module = module;
  }

  @Override
  public LoginActivity get() {
    return Preconditions.checkNotNull(
        module.providesLoginActivity(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static LoginActivityContextModule_ProvidesLoginActivityFactory create(
      LoginActivityContextModule module) {
    return new LoginActivityContextModule_ProvidesLoginActivityFactory(module);
  }

  public static LoginActivity proxyProvidesLoginActivity(LoginActivityContextModule instance) {
    return Preconditions.checkNotNull(
        instance.providesLoginActivity(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
