// Generated by Dagger (https://google.github.io/dagger).
package com.example.Fabulous.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

public final class RetrofitModule_GetHttpLoggingInterceptorFactory
    implements Factory<HttpLoggingInterceptor> {
  private final RetrofitModule module;

  public RetrofitModule_GetHttpLoggingInterceptorFactory(RetrofitModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return Preconditions.checkNotNull(
        module.getHttpLoggingInterceptor(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static RetrofitModule_GetHttpLoggingInterceptorFactory create(RetrofitModule module) {
    return new RetrofitModule_GetHttpLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor proxyGetHttpLoggingInterceptor(RetrofitModule instance) {
    return Preconditions.checkNotNull(
        instance.getHttpLoggingInterceptor(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
