// Generated by Dagger (https://google.github.io/dagger).
package com.example.Fabulous.module;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class LoginActivityContextModule_ProvidesContextFactory implements Factory<Context> {
  private final LoginActivityContextModule module;

  public LoginActivityContextModule_ProvidesContextFactory(LoginActivityContextModule module) {
    this.module = module;
  }

  @Override
  public Context get() {
    return Preconditions.checkNotNull(
        module.providesContext(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static LoginActivityContextModule_ProvidesContextFactory create(
      LoginActivityContextModule module) {
    return new LoginActivityContextModule_ProvidesContextFactory(module);
  }

  public static Context proxyProvidesContext(LoginActivityContextModule instance) {
    return Preconditions.checkNotNull(
        instance.providesContext(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
